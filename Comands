--1.
CREATE TABLE TRANSACTION
(
ID NUMBER(19,0) PRIMARY KEY NOT NULL,
VEHICLE_ID NUMBER(19,0) NOT NULL, 
TRANDATE TIMESTAMP NOT NULL,
TRANTYPE VARCHAR(200),
FOREIGN KEY (VEHICLE_ID)
REFERENCES VEHICLE(ID)
);
CREATE SEQUENCE TRANSACTION_SEQ
START WITH 1
INCREMENT BY 1

ALTER TABLE "TRANSACTION" ADD CONSTRAINT "TRANTYPE_CK" CHECK (TRANTYPE in ('NEW','TRADE','SOLD')) ENABLE;

--2.
ALTER TABLE INVENTORY DROP COLUMN ONHANQTY;
ALTER TABLE INVENTORY ADD UNITS_AVAILABLE NUMBER(19,8)  DEFAULT 30;

--3
CREATE OR REPLACE view Products_Under_Five as
select P.ID Product_Id,P.Name Product_Name,M.ID Manufacture_Id,M.NAME Manufacture_Name,I.ID INVENTORY_ID
FROM MANUFACTURE M 
INNER JOIN PURCHASEOPTION P ON P.MANUFACTURE_ID=M.ID
INNER JOIN INVENTORY I ON I.PURCHASEOPTION_ID=P.ID
where I.UNITS_AVAILABLE <5


--4
CREATE OR REPLACE TRIGGER TR_UPDATE_INVENTORY
  AFTER INSERT ON INVOICEDTL_PURCHASEOPTION
  FOR EACH ROW
BEGIN
  UPDATE INVENTORY SET UNITS_AVAILABLE=UNITS_AVAILABLE-:NEW.QTY WHERE PURCHASEOPTION_ID=:NEW.PURCHASEOPTION_ID;
END ; 

--5
create or replace PROCEDURE reorder_units
AS
  LV_TEST_CUR SYS_REFCURSOR;
  LV_QUERY VARCHAR2(200);
  LV_DATE  DATE;
BEGIN
  FOR CUR_VAR IN (select * from Products_Under_Five)
  LOOP
    UPDATE INVENTORY SET UNITS_AVAILABLE=UNITS_AVAILABLE+20 WHERE ID=CUR_VAR.INVENTORY_ID;  
  end LOOP;
END reorder_units;

--6.
--Contexto
CREATE CONTEXT app_ctx_BillID USING pk_BillID_app_context;

--Paquete Contexto
CREATE OR REPLACE PACKAGE pk_BillID_app_context AS
  -- El contexto tendra un unico valor Bill_ID
  PROCEDURE set_BillId (p_BillID IN NUMBER);
END;

CREATE OR REPLACE PACKAGE BODY pk_BillID_app_context AS
  PROCEDURE set_BillId (p_BillID IN NUMBER) IS
  BEGIN
    DBMS_SESSION.SET_CONTEXT('app_ctx_BillID', 'BillID', p_BillID);
  END;
END;

--Setear  Contexto
BEGIN
pk_BillID_app_context.set_BillId(1);
END;

CREATE OR REPLACE VIEW Bill_Details
AS
  SELECT 
  IH.ID as "bill_id",CSP.SALESPERSON_ID as "sales_person_id",SP.NAME as "name_of_salesperson",C.ID as "client_id",
  C.NAME AS "name_of_client",V.ID AS "vehicle_id", V.NAME AS "brand_of_vehicle", MF.NAME AS "manufacturer_of_vehicle",
  POPT.PURCHASEOPTION_ID AS "accesory_id",OPT.NAME AS "name_of_accesory"
  FROM INVOICEHEAD IH 
                      INNER JOIN  CUSTOMER_SALESPERSON CSP ON IH.CUSTOMER_SALESPERSON_ID=CSP.ID  
                      INNER JOIN  SALESPERSON SP ON CSP.SALESPERSON_ID=SP.ID
                      INNER JOIN  CUSTOMER C ON CSP.CUSTOMER_ID=C.ID
                      INNER JOIN  INVOICEDTL DTL ON IH.ID =DTL.INVOICEHEAD_ID
                      INNER JOIN  VEHICLE V ON DTL.VEHICLE_ID=V.ID
                      INNER JOIN  INVOICEDTL_PURCHASEOPTION POPT ON DTL.ID=POPT.INVOICEDTL_ID
                      INNER JOIN  PURCHASEOPTION OPT ON POPT.PURCHASEOPTION_ID=OPT.ID
                      INNER JOIN  MANUFACTURE MF ON V.MANUFACTURE_ID=MF.ID
  WHERE IH.ID=sys_context('app_ctx_BillID','BillID');
