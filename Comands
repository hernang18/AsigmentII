--1.
CREATE TABLE TRANSACTION
(
ID NUMBER(19,0) PRIMARY KEY NOT NULL,
VEHICLE_ID NUMBER(19,0) NOT NULL, 
TRANDATE TIMESTAMP NOT NULL,
TRANTYPE VARCHAR(200),
FOREIGN KEY (VEHICLE_ID)
REFERENCES VEHICLE(ID)
);
CREATE SEQUENCE TRANSACTION_SEQ
START WITH 1
INCREMENT BY 1

ALTER TABLE "TRANSACTION" ADD CONSTRAINT "TRANTYPE_CK" CHECK (TRANTYPE in ('NEW','TRADE','SOLD')) ENABLE;

--2.
ALTER TABLE INVENTORY DROP COLUMN ONHANQTY;
ALTER TABLE INVENTORY ADD UNITS_AVAILABLE NUMBER(19,8)  DEFAULT 30;

--3
CREATE OR REPLACE view Products_Under_Five as
select P.ID Product_Id,P.Name Product_Name,M.ID Manufacture_Id,M.NAME Manufacture_Name,I.ID INVENTORY_ID
FROM MANUFACTURE M 
INNER JOIN PURCHASEOPTION P ON P.MANUFACTURE_ID=M.ID
INNER JOIN INVENTORY I ON I.PURCHASEOPTION_ID=P.ID
where I.UNITS_AVAILABLE <5


--4
CREATE OR REPLACE TRIGGER TR_UPDATE_INVENTORY
  AFTER INSERT ON INVOICEDTL_PURCHASEOPTION
  FOR EACH ROW
BEGIN
  UPDATE INVENTORY SET UNITS_AVAILABLE=UNITS_AVAILABLE-:NEW.QTY WHERE PURCHASEOPTION_ID=:NEW.PURCHASEOPTION_ID;
END ; 

--5
create or replace PROCEDURE reorder_units
AS
  LV_TEST_CUR SYS_REFCURSOR;
  LV_QUERY VARCHAR2(200);
  LV_DATE  DATE;
BEGIN
  FOR CUR_VAR IN (select * from Products_Under_Five)
  LOOP
    UPDATE INVENTORY SET UNITS_AVAILABLE=UNITS_AVAILABLE+20 WHERE ID=CUR_VAR.INVENTORY_ID;  
  end LOOP;
END reorder_units;
